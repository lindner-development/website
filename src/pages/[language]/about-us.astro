---
//import { getStaticPaths } from "../../paramHelper";
//export { getStaticPaths };
//export const prerender = true;

import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import Heading from "../../components/Heading.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

import lindner from "../../assets/lindner.webp";
import { Picture } from "astro:assets";

import { Button } from "../../components/Button/Button";
import HookSection from "../../components/HookSection.astro";
import { useTranslations } from "../../i18n";
import { MetaBuilder } from "../../meta";

const { language } = Astro.params;
const currentLanguage = language === "de" ? "de" : "en";
const t = useTranslations(currentLanguage);

const lastChange = new Date(Date.parse("2023-07-20T00:00:00Z"));

const metaBuilder = new MetaBuilder();
metaBuilder.title(t("aboutus.meta.title") as string);
metaBuilder.description(
  t("aboutus.meta.description") as string,
  t("aboutus.meta.description") as string,
  t("aboutus.meta.openGraphDescription") as string,
  t("aboutus.meta.twitterDescription") as string
);
metaBuilder.keywords(t("aboutus.meta.keywords") as unknown as string[]);
metaBuilder.revisedAt(lastChange);
const meta = metaBuilder.create();
---

<style lang="scss">
  @use "src/scss/typography";
  @use "src/scss/colors";

  article {
    margin: 0 6rem;
  }

  h2 {
    margin-top: 0;
  }

  #aboutus {
    padding: 1rem 6rem;

    @media screen and (max-width: 768px) {
      padding: 1rem 3rem;
    }

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 12rem;

    & > div {
      flex: 1 1 0;
    }

    .about-us-image {
      display: flex;
      justify-content: center;
      align-items: center;
      max-width: 50%;
      height: auto;
    }

    @media screen and (max-width: 768px) {
      flex-direction: column;
      gap: 0;
      .about-us-image {
        display: none;
      }
    }
  }

  .platform-adversiting {
    margin-top: 0.4rem;
    font-size: typography.$font-size-xs;
  }
</style>
<BaseLayout {meta}>
  <main>
    <Header />
    <article>
      <Heading headingType="h1">
        <div slot="description">
          {t("aboutus.content.titleDescription")}
        </div>
        {t("aboutus.content.title")}
      </Heading>
      <section id="aboutus">
        {
          /*<Image
          class="aboutus-image"
          height="480"
          src={lindner}
          alt="Avatar of Robin Lindner"
        />*/
        }
        {
          /*<picture class="aboutus-image">
          <source srcset="/lindner.avif" type="image/avif" />
          <source srcset="/lindner.jxl" type="image/jxl" />
          <source srcset="/lindner.webp" type="image/webp" />
          <img
            class="aboutus-image"
            src="/lindner.webp"
            height="480"
            width="320"
            decoding="async"
            alt="Avatar of Robin Lindner"
          />
        </picture>*/
        }
        <Picture 
          class="aboutus-image" 
          src={lindner} 
          formats={["avif", "webp"]}
          height="480" 
          width="320" 
          loading="eager"
          decoding="async" 
          alt="Avatar of Robin Lindner"
         />
        <div>
          <h2>{t("aboutus.content.headline")}</h2>
          <div>
            <p>
              {t("aboutus.content.description")}
            </p>
          </div>
          <div>
            <a href="https://deeprobin.de/" target="_blank">
              <Button variant="secondary">
                {t("aboutus.content.button") as string}
              </Button>
            </a>
          </div>
        </div>
      </section>
      <section id="hook">
        <HookSection />
      </section>
    </article>
    <Footer />
  </main>
</BaseLayout>
