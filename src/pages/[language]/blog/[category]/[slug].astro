---
import {
  contentfulClient,
  BlogPostSkeleton,
  BlogPost,
} from "../../../../contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import Heading from "../../../../components/Heading.astro";
import Header from "../../../../components/Header.astro";
import Footer from "../../../../components/Footer.astro";
import BlogSection from "../../../../components/BlogSection.astro";
import { MetaBuilder } from "../../../../meta";

const { language, slug } = Astro.params;

if (!slug) {
  return;
}

const entries = await contentfulClient.getEntries<BlogPostSkeleton>({
  content_type: "blogPost",
  locale: language == "de" ? "de" : "en-US",
  limit: 1,
  "fields.slug": slug,
} as any);
if (!entries.items.length) {
  return 404;
}
const entry = entries.items[0];
if (!entry) {
  return 404;
}
const contentPage: BlogPost = entry.fields;
const htmlContent = documentToHtmlString(contentPage.content);

let metaBuilder = new MetaBuilder();

metaBuilder.title(`Lindner IT \u002d ${contentPage.title}`);
metaBuilder.description(
  contentPage.metaDescription,
  contentPage.metaDescription,
  contentPage.openGraphDescription,
  contentPage.twitterDescription
);
if (contentPage.image?.fields?.file) {
  let url = contentPage.image.fields.file.url as string;
  if (url.startsWith("//")) {
    url = "https:" + url;
  }
  metaBuilder.image(new URL(url));
}
metaBuilder.keywords(contentPage.keywords);
metaBuilder.revisedAt(new Date(Date.parse(entry.sys.updatedAt)));
metaBuilder.jsonld({
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: contentPage.title,
  abstract: contentPage.metaDescription,
  image: contentPage.image?.fields?.file?.url,
  thumbnailUrl: contentPage.image?.fields?.file?.url,
  datePublished: new Date(Date.parse(entry.sys.createdAt)),
  dateModified: new Date(Date.parse(entry.sys.updatedAt)),
  author: [
    {
      "@type": "Person",
      name: contentPage.author.fields.name,
      url: `https://twitter.com/${contentPage.author.fields.twitterHandle}`,
      jobTitle: contentPage.author.fields.position,
    },
  ],
  wordCount: contentPage.content?.content.reduce(
    (acc, cur) => acc + cur.content.length,
    0
  ),
  url: Astro.url,
});

metaBuilder.jsonld({
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Lindner IT",
      item: `https://lindnerit.io/${language}/`,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Blog",
      item: `https://lindnerit.io/${language}/blog`,
    },
    {
      "@type": "ListItem",
      position: 3,
      name: contentPage.category.fields.displayName,
      item: `https://lindnerit.io/${language}/blog/${contentPage.category.fields.slug}`,
    },
    {
      "@type": "ListItem",
      position: 4,
      name: contentPage.title,
      item: `https://lindnerit.io/${language}/blog/${contentPage.category.fields.slug}/${contentPage.slug}`,
    },
  ],
});

let meta = metaBuilder.create();
// TODO: Integrate Share Button for mobile / WebShare API
// TODO: Add Feelback Integration (for ex. using astro-feelback)
---

<style lang="scss">
  article,
  aside {
    padding: 1rem 6rem;

    @media screen and (max-width: 768px) {
      padding: 1rem 3rem;
    }
  }
</style>
<BaseLayout {meta}>
  <main>
    <Header />
    <article>
      <Heading headingType="h1">{contentPage.title}</Heading>
      <div set:html={htmlContent} />
    </article>
    <aside>
      <strong>Dies k√∂nnte auch interessant sein:</strong>
      <BlogSection />
    </aside>
    <Footer />
  </main>
</BaseLayout>
